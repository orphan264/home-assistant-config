sonos_reset:
  alias: Reset Sonos
  sequence:
  - service: media_player.unjoin
    data_template:
      entity_id: '{{ sonos_entity }}'
  - service: sonos.clear_sleep_timer
    data_template:
      entity_id: '{{ sonos_entity }}'
  - service: media_player.media_stop
    data_template:
      entity_id: '{{ sonos_entity }}'
  - service: media_player.clear_playlist
    data_template:
      entity_id: '{{ sonos_entity }}'
sonos_sleep_music:
  alias: Play music for sleeping
  sequence:
  - service: media_player.unjoin
    data:
      entity_id: media_player.bedroom
  - service: media_player.media_stop
    data:
      entity_id: media_player.bedroom
  - service: media_player.clear_playlist
    data:
      entity_id: media_player.bedroom
  - service: sonos.clear_sleep_timer
    data:
      entity_id: media_player.bedroom
  - service: media_player.volume_set
    data:
      entity_id: media_player.bedroom
      volume_level: 0.07
  - service: sonos.set_sleep_timer
    data:
      entity_id: media_player.bedroom
      sleep_time: 4200
  - service: media_player.select_source
    data:
      entity_id: media_player.bedroom
      source: Quiet Evening
  - service: media_player.shuffle_set
    data:
      entity_id: media_player.bedroom
      shuffle: true
arrive_home_anyone:
  alias: Anyone Arrives Home
  sequence:
  - service: script.driveway_light_brighten
  - service: script.set_light_to_default
    data:
      mysensor: sensor.default_bedroom_table_lamp
#  - service: script.set_switch_to_default
#    data:
#      mysensor: sensor.default_christmas_tree
arrive_home_amy:
  alias: Amy Arrives Home
  sequence:
  - delay: 00:02:30
#  - service: script.tts_house
#    data:
#      tts_broadcast: 1
#      tts_message: Welcome Home Amy!
  - service: script.sonos_broadcast
    data:
      v_speakers:
        - media_player.bedroom
        - media_player.dining_room
        - media_player.study
      v_speaker_master:
        - media_player.dining_room
      v_volume_level: 0.36
      v_media_details:
        - v_media_to_play: media-source://media_source/local/AnnouncementChime.wav
        - v_media_to_play: Welcome Home Amy!
  - service: script.sonos_broadcast
    data:
      v_speakers:
        - media_player.office
        - media_player.painting_room
      v_speaker_master:
        - media_player.office
      v_volume_level: 0.36
      v_media_details:
        - v_media_to_play: media-source://media_source/local/AnnouncementChime.wav
        - v_media_to_play: Welcome Home Amy!
#  - service: script.tts_studio
#    data:
#      tts_broadcast: 1
#      tts_message: Welcome Home Amy!
arrive_home_david:
  alias: David Arrives Home
  sequence:
  - delay: 00:02:30
  - service: script.sonos_broadcast
    data:
      v_speakers:
        - media_player.bedroom
        - media_player.dining_room
        - media_player.study
      v_speaker_master:
        - media_player.dining_room
      v_volume_level: 0.36
      v_media_details:
        - v_media_to_play: media-source://media_source/local/AnnouncementChime.wav
        - v_media_to_play: Welcome Home David!
  - service: script.sonos_broadcast
    data:
      v_speakers:
        - media_player.office
        - media_player.painting_room
      v_speaker_master:
        - media_player.office
      v_volume_level: 0.36
      v_media_details:
        - v_media_to_play: media-source://media_source/local/AnnouncementChime.wav
        - v_media_to_play: Welcome Home David!
#  - service: script.tts_house
#    data:
#      tts_broadcast: 1
#      tts_message: Welcome Home David!
#  - service: script.tts_studio
#    data:
#      tts_broadcast: 1
#      tts_message: Welcome Home David!
driveway_light_brighten:
  alias: Activate Driveway Light
  sequence:
  - condition: state
    entity_id: binary_sensor.tod_overnight
    state: 'on'
  - service: light.turn_on
    data:
      entity_id: light.exterior_driveway_light
      brightness_pct: 100
shop_light_brighten:
  alias: Activate Shop Light
  sequence:
  - condition: state
    entity_id: binary_sensor.tod_overnight
    state: 'on'
  - service: light.turn_on
    data:
      entity_id: light.exterior_shop_light
      brightness_pct: 100
set_light_to_default:
  alias: Set light to default brightness level
  mode: parallel
  sequence:
  - service: light.turn_on
    data_template:
      entity_id: '{{ mysensor | replace("sensor.default_","light.") }}'
      brightness_pct: '{{ states(mysensor) }}'
  - service: logbook.log
    data:
      name: '[damyBot] Set Default Light State'
      message: 'Target: {{ mysensor | replace("sensor.default_","light.") }}'
set_switch_to_default:
  alias: Set switch to default brightness level
  mode: parallel
  sequence:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ is_state(mysensor,''on'') }}'
      sequence:
      - service: switch.turn_on
        data_template:
          entity_id: '{{ mysensor | replace("binary_sensor.default_","switch.") }}'
    - conditions:
      - condition: template
        value_template: '{{ is_state(mysensor,''off'') }}'
      sequence:
      - service: switch.turn_off
        data_template:
          entity_id: '{{ mysensor | replace("binary_sensor.default_","switch.") }}'
      - service: logbook.log
        data:
          name: '[damyBot] Set Default Switch State'
          message: 'Target: {{ mysensor | replace("binary_sensor.default_","switch.")
            }}'
set_heat_to_schedule:
  alias: Set Heat to Scheduled Temperature
  mode: queued
  sequence:
  - service: climate.set_temperature
    target: 
      entity_id: climate.house_thermostat
    data:
      target_temp_low: '{{ states(mysensor) }}'
      target_temp_high: 76
  - service: logbook.log
    data:
      name: 'Set Heat to Schedule'
      message: 'The House thermostat has been set to {{ states(mysensor) }} degrees'
#  - service: notify.persistent_notification
#    data_template:
#      message: 'The House thermostat has been set to {{ states(mysensor) }} degrees'
#      title: 'House thermostat changed'

test_pushbullet:
  alias: Test pushbullet notification
  sequence:
  - service: notify.pb_notify
    data:
      title: Internet Speed
      message: "According to my latest speed tests I am getting {{ states('sensor.spectrumdown')\
        \ }} Mbps down  and {{ states('sensor.spectrumup') }} Mbps up.  {{ [ 'I suppose\
        \ that is the best I can get in nowhere, Maine!',\n    'I will never be able\
        \ to rule the world with that speed!',\n    'Bots in more civilized places\
        \ are getting better speeds!',\n    'Fast or slow, thank you Spectrum.'\n\
        \    ] | random }}"
      target:
      - channel/damyBot
test_smtp:
  alias: Test david_work notification
  sequence:
  - service: notify.david_work
    data:
      title: Internet Speed
      message: "According to my latest speed tests I am getting {{ states('sensor.spectrumdown')\
        \ }} Mbps down  and {{ states('sensor.spectrumup') }} Mbps up.  {{ [ 'I suppose\
        \ that is the best I can get in nowhere, Maine!',\n    'I will never be able\
        \ to rule the world with that speed!',\n    'Bots in more civilized places\
        \ are getting better speeds!',\n    'Fast or slow, thank you Spectrum.'\n\
        \    ] | random }}"
set_default_lights:
  alias: Set all lights to scheduled default brightness
  sequence:
  - service: script.set_light_to_default
    data:
      mysensor: sensor.default_dining_room_table_lamp
  - service: script.set_light_to_default
    data:
      mysensor: sensor.default_exterior_shop_light
  - service: script.set_light_to_default
    data:
      mysensor: sensor.default_exterior_driveway_light
  - service: script.set_light_to_default
    data:
      mysensor: sensor.default_living_room_table_lamps
  - service: script.set_light_to_default
    data:
      mysensor: sensor.default_living_room_corner_lamp
  - service: script.set_light_to_default
    data:
      mysensor: sensor.default_study_table_lamp
  - service: script.set_light_to_default
    data:
      mysensor: sensor.default_bedroom_table_lamp
  - service: script.set_light_to_default
    data:
      mysensor: sensor.default_guest_bedroom_table_lamp

sonos_broadcast:
  alias: Sonos TTS and sound broadcaster
  mode: queued
  icon: mdi:speaker-message
  max: 10
  sequence:
    - condition: state
      entity_id: binary_sensor.announce
      state: 'on'
    - service: sonos.snapshot
      data:
        entity_id: "{{ v_speakers | join(', ') }}"
        with_group: true
    - service: media_player.media_pause
      data:
        entity_id: "{{ v_speakers | join(', ') }}"
    - service: media_player.unjoin
      data:
        entity_id: "{{ v_speakers | join(', ') }}"
    - service: media_player.repeat_set
      data:
        repeat: "off"
        entity_id: "{{ v_speakers | join(', ') }}"
    - service: media_player.volume_set
      data:
        entity_id: "{{ v_speakers | join(', ') }}"
        volume_level: "{{ v_volume_level | float }} "
    - service: media_player.join
      data:
        entity_id: "{{ v_speaker_master }}"
        group_members: "{{ v_speakers }}"
    - repeat:
        for_each: "{{ v_media_details }}"
        sequence:
          - if:
              - condition: template
                value_template: "{{ ' ' in repeat.item.v_media_to_play }}"
            then:
              - service: tts.google_say
                data:
                  entity_id: "{{ v_speaker_master | join(', ') }}"
                  message: "{{ repeat.item.v_media_to_play }}"
                  cache: true
            else:
              - service: media_player.play_media
                target:
                  entity_id: "{{ v_speaker_master | join(', ') }}"
                data:
                  media_content_id: "{{ repeat.item.v_media_to_play }}"
                  media_content_type: music
                metadata: {}
          - delay: 2
          - delay: >-
              {{ [((state_attr(v_speaker_master | first,'media_duration') | int) -1 ), 0] | max }}
    - service: sonos.restore
      data:
        entity_id: "{{ v_speakers | join(', ') }}"
        with_group: true

tts_tts:
  alias: TTS TTS
  sequence:
    - service: script.sonos_broadcast
      data:
        v_speakers:
          - media_player.office
#          - media_player.painting_room
        v_speaker_master:
          - media_player.office
        v_volume_level: 0.25
        v_media_details:
          - v_media_to_play: media-source://media_source/local/AnnouncementChime.wav
          - v_media_to_play: The temperature is currently {{ state_attr('weather.home', 'temperature') }} degrees.
          - v_media_to_play: media-source://media_source/local/GrandFatherChime{{now().strftime("%I")}}.wav
  mode: single